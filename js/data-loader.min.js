class DataLoader{constructor(){this.cache=new Map,this.loadedChunks=new Set,this.config=window.RivianSpotterConfig?.data||{}}getCachedData(a){const t=this.cache.get(a);if(!t)return null;const e=Date.now(),i=this.config.cacheExpirationMs||18e5;return e-t.timestamp>i?(this.cache.delete(a),null):t.data}setCachedData(a,t){this.config.enableCaching&&this.cache.set(a,{data:t,timestamp:Date.now()})}async loadLocationData(){try{const a=this.getCachedData("locations");if(a)return console.log("Using cached location data"),a;if("undefined"!=typeof rivianLocations&&Array.isArray(rivianLocations)){const a=this.validateLocationData(rivianLocations);return this.setCachedData("locations",a),a}return await this.loadFromAPI()}catch(a){throw console.error("Failed to load location data:",a),new Error("Unable to load location data. Please try again later.")}}validateLocationData(a){if(!Array.isArray(a))throw new Error("Invalid location data format");return a.filter(a=>{if(!a||"object"!=typeof a)return!1;if(!a.id||!a.name)return!1;if("number"!=typeof a.lat||"number"!=typeof a.lng)return!1;if(a.lat<-90||a.lat>90)return!1;if(a.lng<-180||a.lng>180)return!1;if(["name","address","city","state","type","phone","hours","rivianUrl"].forEach(t=>{a[t]&&"string"==typeof a[t]&&(a[t]=this.sanitizeString(a[t]))}),a.openingDate&&"string"==typeof a.openingDate&&(/^\d{4}-\d{2}-\d{2}$/.test(a.openingDate)||(console.warn("Invalid opening date format for location:",a.name),a.openingDate=null)),a.rivianUrl&&"string"==typeof a.rivianUrl)try{new URL(a.rivianUrl).hostname.includes("rivian.com")||(console.warn("Invalid Rivian URL for location:",a.name),a.rivianUrl=null)}catch(t){console.warn("Invalid URL format for location:",a.name),a.rivianUrl=null}return a.services&&Array.isArray(a.services)&&(a.services=a.services.filter(a=>"string"==typeof a).map(a=>this.sanitizeString(a))),!0}).map((a,t)=>({...a,id:a.id||`loc_${t}_${Date.now()}`}))}sanitizeString(a){return a&&"string"==typeof a?a.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"").replace(/<iframe\b[^<]*(?:(?!<\/iframe>)<[^<]*)*<\/iframe>/gi,"").replace(/javascript:/gi,"").replace(/on\w+\s*=/gi,"").trim():""}async loadFromAPI(){try{const a=await fetch("/api/locations.php",{method:"GET",headers:{Accept:"application/json","Cache-Control":"max-age=300"}});if(!a.ok)throw new Error(`API request failed: ${a.status}`);const t=await a.json(),e=this.validateLocationData(t);return this.setCachedData("locations",e),e}catch(a){throw console.error("API loading failed:",a),a}}async loadLocationChunk(a,t){try{const e=(await this.loadLocationData()).slice(a,t),i=`chunk_${a}_${t}`;return this.loadedChunks.add(i),e}catch(a){throw console.error("Failed to load location chunk:",a),a}}async preloadNearbyChunks(a,t=50){if(!this.config.enableLazyLoading)return;const e=Math.max(0,a-t),i=a+2*t;try{await this.loadLocationChunk(e,i)}catch(a){console.warn("Preloading nearby chunks failed:",a)}}clearCache(){this.cache.clear(),this.loadedChunks.clear(),console.log("Data cache cleared")}getCacheStats(){return{cacheSize:this.cache.size,loadedChunks:this.loadedChunks.size,cacheKeys:Array.from(this.cache.keys())}}}window.dataLoader=new DataLoader;
//# sourceMappingURL=data-loader.min.js.map