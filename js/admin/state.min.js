const AdminState={locations:[],originalLocations:[],editingId:null,pendingChanges:new Map,currentTypeFilter:"all",initialize(){this.locations=[],this.originalLocations=[],this.editingId=null,this.pendingChanges=new Map,this.currentTypeFilter="all"},setLocations(i){this.locations=i,this.originalLocations=JSON.parse(JSON.stringify(i)),this.pendingChanges.clear()},getLocations(){return this.locations},getOriginalLocations(){return this.originalLocations},trackChange(i,n="modified"){this.pendingChanges.set(i,n)},getPendingChangesCount(){return this.pendingChanges.size},clearPendingChanges(){this.pendingChanges.clear()},discardChanges(){this.locations=JSON.parse(JSON.stringify(this.originalLocations)),this.pendingChanges.clear()},hasChanges(i){return this.pendingChanges.has(i)},setEditingId(i){this.editingId=i},getEditingId(){return this.editingId},setTypeFilter(i){this.currentTypeFilter=i},getTypeFilter(){return this.currentTypeFilter},addLocation(i){this.locations.push(i)},updateLocation(i,n){const t=this.locations.findIndex(n=>n.id===i);-1!==t&&(this.locations[t]=n)},deleteLocation(i){this.locations=this.locations.filter(n=>n.id!==i)},findLocationById(i){return this.locations.find(n=>n.id===i)}};"undefined"!=typeof window&&(window.AdminState=AdminState);
//# sourceMappingURL=state.min.js.map